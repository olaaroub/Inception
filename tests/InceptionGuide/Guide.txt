-------------------     Inception project  ------------------------

Inception is a system administration project aimed at introducing students to modern infrastructure deployment practices using Docker.
The goal is to set up a secure and modular web hosting environment by containerizing different services and managing them with Docker Compose.

The entire setup is deployed inside a virtual machine, simulating a production-like environment.
Each core service (web server, database, application) runs in its own isolated Docker container,
ensuring separation of concerns, scalability, and maintainability.

Key aspects of the project include:

	Manual Dockerfile creation for each service to better understand containerization internals.

	Security-focused configuration, enforcing the use of HTTPS and secure credentials management.

	Use of environment variables to manage sensitive data, stored in a .env file and excluded from version control.

	Volume usage to persist data beyond container lifecycle, mimicking real-world service reliability.

	Networking through a dedicated Docker network that links all services together,
	simulating real service communication behind a reverse proxy.

	Automation via a Makefile, making deployment and rebuilds streamlined and reproducible.

The project encourages students to respect best practices in Docker: avoid using pre-built images,
infinite loops, or insecure setups.
Optionally, the Bonus part of this project requires setting up additional services :Redis, Adminer, FTP, a static website and a service of your choice.

In short, Inception is a hands-on introduction to deploying containerized web applications securely and efficiently,
bridging theory with practical DevOps skills.

-----------------------------------------------------
________________DOCKER__________________
-----------------------------------------------------

✅ What is Docker?
		Docker is a platform that lets you package your application into containers. A container is like a box that includes everything your app needs: code, libraries, and settings.
		It helps you run your app anywhere (on any machine) in the same way, without worrying about system differences or environment problems.

✅ Why use Docker?
		Simplicity  – Package your app and run it easily.

		Portability – Works on Windows, Linux, Mac, servers, or cloud.

		Isolation   – Each container runs separately; no conflicts.

		Consistency – Your app runs the same everywhere.

✅ Terminology [lilmo3a9in]{Fahras}:

		Dockerfile – A file that contains instructions to build an image (like a recipe). [lilmo3a9in]{B7al l Makefile dial Docker}

		Image – A snapshot of your app, ready to run [lilmo3a9in](b7al chi executable (a.out)).
					for more informations go to : Concepts/2a-Docker_Images.txt

		Container – A running instance of an image (your app in action).
					for more informations go to : Concepts/2b-Docker_Containers.txt

		Docker Hub – A public registry to find and share Docker images. [lilmo3a9in]{b7al GitHub lakin dyal docker}

to learn about Docker Architecture follow : Concepts/1-Docker_Architecture

-------------------------------------------------------------
________________LET'S START WITH NGINX___________________
-------------------------------------------------------------

NGINX (pronounced "engine-x") is a high-performance, open-source web server, reverse proxy server, load balancer ... [liLmo3a9in](o chi l3ibat khrin)
THE IMPORTANT PART WE NEED TO LEARN MORE ABOUT IS WHAT A Web Server IS

A Web Server is a program that:
		Listens for HTTP requests (usually on port 80 or 443)
		Processes those requests
		Returns appropriate HTTP responses (HTML, JSON, files, etc.)

🌐 What Happens When You Visit a Website:
	The Web Server performs the following steps:

		Accepts the incoming TCP connection
		Reads the raw HTTP request bytes from the socket
		Parses the request (e.g., method, headers, path)
		Maps the request path (e.g. /index.html) to:
		A file on disk (for static content)
		Or an internal handler (for dynamic routes / proxying)
		Generates or reads the response content
		Sends the HTTP response back over the socket to the client (browser)

WHAT IS SOCKET :
	A socket is not a software or a file in the usual sense, but in UNIX/Linux, it behaves like a special file descriptor managed by the kernel.
	🧠 So What Is a Socket Exactly?
		✅ At the system level:
				A socket is a data structure inside the OS kernel that holds:
				The protocol (TCP/UDP)
				IP address and port
				Connection state
				Buffers for sending/receiving data

		✅ To your program:
				A socket is just an integer, like a file descriptor

Now, Go to nginx/1-Dockerfile.txt to Start the nginx setup.

---> ✅ NGINX WITH TLS IS NOW DONE!

	Since you’ve already set up NGINX with TLS, the next logical step is to build the MariaDB container.
	MariaDB should come before WordPress for one main reason:
	WordPress needs the database to be up and running so it can connect and initialize during its setup.
	Without MariaDB, WordPress installation will fail or hang.

-------------------------------------------------------------
________________MARIADB___________________
-------------------------------------------------------------

In simple terms:
	MariaDB Server is a tool that helps programs store, search, update, and organize information in a structured way.
	MariaDB Server is a database management system (DBMS).

database :  The database is a section of your computer’s storage (disk)
			where a Database Management System (DBMS) like MariaDB saves and organizes data in a structured way
If you create a database called myapp_db, MariaDB might create: /var/lib/mysql/myapp_db/

Inside that, you’ll find files like:
	users.frm     (table structure)
	users.ibd     (actual user data)

Important:
		You don’t usually access this folder directly. Instead:
		You use SQL commands (SELECT, INSERT, ...).
		MariaDB handles the file-level logic for you.

More precisely:
		-It's a program that runs on a server.
		-It lets other programs store, retrieve, update, and delete data in a structured way.
		-The data is stored in tables, like spreadsheets (rows and columns).
		-It uses SQL (Structured Query Language) to interact with the data.
		-It's based on MySQL but is open-source and maintained by the original developers of MySQL.

-->So, when you hear "MariaDB Server," think of it as:
		A smart, organized filing system that programs use to handle large amounts of data safely and efficiently.

Now, Go to mariadb/1-Dockerfile.txt to Start the MariaDB setup.

---> ✅ MARIADB IS NOW DONE!

	Now that MariaDB is configured, we can get started on WordPress. 

----------------------------------------------
________________WORDPRESS___________________
----------------------------------------------

wordpress is the last container we must create.

WordPress is a free, open-source Content Management System (CMS) written in PHP and backed by a MySQL or MariaDB database.
It allows anyone from beginners to developers to build, manage,
and maintain websites without needing to write code (although developers can go deeper if needed).

There are two main types of WordPress:
		WordPress.org: The self-hosted version where you install the software on your own server (gives you full control).
		WordPress.com: A hosted platform run by Automatic it's simpler but limited in customization (like a service).

NOTE  : in our project we use WordPress.org.

Difference between the Wordpress Database and Volume :
		WordPress uses volumes to store files like images, themes, plugins, and core code.
		All dynamic content like posts, pages, comments, settings, users, etc. are stored in the database.

		Volumes: Store static files (uploads, themes, plugins).for more informations go to : Guide/Volumes.txt
		Database: Stores all site content, configuration, and user data.

Example : I Upload an Image to my Wordpress Page :
		The image file itself is stored in the Volume (specifically, in the wp-content/uploads directory on disk).
		The metadata about the image (such as its title, description, and file path) is stored in the database.

Now, Go to wordpress/1-Dockerfile.txt to Start the WordPress setup.

---> ✅ WORDPRESS IS NOW DONE!

	Wordpress was our final container to create. Now we are ready to set up our infrastructure!
	We set it up with Docker Compose, as per subject requirement.